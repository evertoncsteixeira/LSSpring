import React from "react";
import axios from "axios";

class TabelaPets extends React.Component{
  render(){
    //criar arquivos que serão usados na lista e mostrado na tela atualizando.
    const lista = this.props.state.lista;
    const listaDisplay = [];
    //carregar lista.
    for (let i = 0; i < lista.length; i++){
      listaDisplay.push(
        <tr>
          <td> <font color="blue">  {lista[i].id} </font> </td>
          <td> <font color="blue"> {lista[i].nome} </font> </td>
          <td> <font color="blue"> {lista[i].especie} </font></td>
          <td> <font color="blue"> {lista[i].raca} </font></td>
        </tr>
      );
    }
    //exibir na página
    return (
      <div>
       <h2>Lista de Pets</h2>  
        <table className = "table table-striped">
           <thead>
              <tr>
                <th> <font color="red"> ID: </font> </th>
                <th> <font color="red"> Nome: </font> </th>
                <th> <font color="red"> Especie: </font></th>
                <th> <font color="red"> Raça: </font> </th>
              </tr>
           </thead>
           <tbody>
             {listaDisplay}
            </tbody>
         </table>
        <h3> Fim da lista </h3>
      </div>
    );
  }
}
//criação e edição do label que serão utilizadas
function LabelInput (props){
  return (
    <div className="form-group"> 
      <label> {props.label} </label>
      <input type='TEXT' value={props.value} 
          className="form-control"
          onChange={(e) => {
            if (props.atualizarTexto) {
              props.atualizarTexto(e.target.value)}
            }}/>
    </div>
  )
}
//classe principal
class App extends React.Component {
  //usar o state para as alterações das informações da pagina.
  state = {
    petAtual:{
      id: "",
      nome: "",
      especie: "",
      raca: ""
    },

    lista : [

    ]
  }

  componentDidMount() {
    axios.get(
      'http://localhost:8080/LSExercicioAula5/lista',
      {
        responseType: 'json',
      }
    ).then(
      (response) => {
        console.log(response);
        const novoState = {...this.state};
        novoState.lista = response.data;
        this.setState(novoState);
      }
    );
  }
  atualizarTexto(campo, txt){
    //sempre criar novoState e setState para usar diferentes estancias e atualização da pagina.
    const novoState = {...this.state};
    novoState.petAtual[campo] = txt;
    this.setState(novoState);
  }
  salvar(){
    //const novoState = {...this.state};
    //novoState.lista.push({...this.state.petAtual});
    //this.setState(novoState);
    const apiUrl = 'http://localhost:8080/LSExercicioAula5/adicionarPet';
    fetch(
      apiUrl, {
        method: 'POST',
        headers: {
          Accept: 'text/plain',
          'Content-Type': 'application/json'
        },
        body: JSON.stringify(this.state.petAtual)
        }).then(
          (response) => {
          console.log(response.body);
          this.componentDidMount();
        }
      
    );
    alert('Operação efetuada com sucesso!');
  }
  render(){
    return (
      //inputs da pagina. 
      <div className = "container">
        <h1 font> Casdatro Pets </h1>
        <LabelInput label="ID:" corFundo = "white" 
                    value={this.state.petAtual.id}
                    atualizarTexto={(txt) => this.atualizarTexto('id',txt)}/>
        <LabelInput label="Nome:" corFundo = "white"
                    value={this.state.petAtual.nome}
                    atualizarTexto={(txt) => this.atualizarTexto('nome',txt)}/>
        <LabelInput label="Espécie:" corFundo = "white"
                    value={this.state.petAtual.especie}
                    atualizarTexto={(txt) => this.atualizarTexto('especie',txt)}/>
        <LabelInput label="Raça:" corFundo = "white"
                    value={this.state.petAtual.raca}
                    atualizarTexto={(txt) => this.atualizarTexto('raca',txt)}/>
        <button className = "btn btn-primary"
        onClick={() => {this.salvar()}}> Salvar </button>
        <TabelaPets state={this.state}/>
      </div>
    );
  }
}

export default App;
